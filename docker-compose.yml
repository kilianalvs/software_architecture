version: '3.8'

services:
  # ===================
  # FRONTEND - React.js
  # ===================
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    container_name: frontend-container
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080
    networks:
      - app-network

  # ===================
  # BACKEND - Spring Boot
  # ===================
  backend:
    build:
      context: ./notfound
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    container_name: backend-container
    environment:
      # Configuration PostgreSQL pour Docker
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/notfound_parking
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_DATASOURCE_USERNAME=notfound_user
      - SPRING_DATASOURCE_PASSWORD=notfound_password
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
    networks:
      - app-network
    depends_on:
      - database

  # ===================
  # DATABASE - PostgreSQL 
  # ===================
  database:  # ✅ Maintenant bien indenté !
    image: postgres:15
    container_name: database-container
    environment:
      POSTGRES_DB: notfound_parking
      POSTGRES_USER: notfound_user
      POSTGRES_PASSWORD: notfound_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: